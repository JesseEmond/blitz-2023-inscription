use criterion::{criterion_group, criterion_main, Criterion};

use blitz_bot::ant_colony_optimization::{Colony, HyperParams};
use blitz_bot::game_interface::{GameTick, Map, Position, TideLevels, Topology};
use blitz_bot::graph::{Graph};
use blitz_bot::pathfinding::{Pathfinder};


fn make_game() -> GameTick {
   GameTick {
       current_tick: 0,
       total_ticks: 400,
       map: Map {
           rows: 60,
           columns: 60,
           topology: Topology(
           vec![
               vec![9, 9, 8, 8, 9, 9, 9, 9, 9, 8, 7, 7, 7, 8, 8, 7, 7, 6, 6, 7, 7, 8, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6, 6, 6, 7, 7, 7, 7, 8, 9, 9, 8, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 8, 8, 8, 9, 10],
               vec![9, 9, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 8, 8, 7, 7, 6, 7, 7, 8, 8, 8, 7, 7, 8, 8, 8, 7, 7, 7, 6, 6, 6, 5, 5, 5, 6, 6, 7, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9],
               vec![9, 9, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 9, 8, 7, 7, 8, 8, 8, 7, 7, 7, 8, 8, 8, 7, 7, 7, 6, 6, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8],
               vec![9, 9, 8, 7, 7, 7, 6, 6, 7, 6, 6, 7, 8, 8, 9, 9, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 6, 6, 7, 7, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8],
               vec![10, 8, 8, 8, 7, 6, 6, 6, 6, 6, 7, 7, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 6, 6, 7, 8, 8, 8, 7, 7, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8],
               vec![10, 9, 9, 9, 8, 7, 6, 6, 6, 6, 7, 8, 7, 6, 5, 6, 6, 6, 6, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 6, 6, 7, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7],
               vec![10, 9, 8, 8, 8, 7, 7, 7, 7, 7, 8, 9, 7, 6, 6, 6, 6, 6, 5, 5, 5, 5, 6, 6, 5, 5, 5, 6, 6, 7, 7, 7, 7, 6, 6, 6, 7, 7, 7, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 7, 8, 8],
               vec![9, 9, 7, 7, 7, 7, 7, 7, 6, 7, 8, 9, 7, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 8, 7, 7, 6, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8],
               vec![9, 8, 7, 7, 7, 7, 7, 6, 5, 6, 8, 8, 6, 6, 6, 5, 4, 4, 4, 4, 4, 5, 5, 4, 4, 3, 3, 5, 6, 7, 7, 7, 7, 6, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6, 7, 7, 8, 8, 8, 8],
               vec![9, 8, 7, 7, 7, 7, 6, 6, 5, 6, 8, 7, 6, 6, 6, 5, 4, 4, 4, 4, 4, 5, 4, 3, 3, 3, 4, 4, 5, 6, 7, 7, 7, 6, 5, 4, 5, 5, 5, 5, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8],
               vec![8, 8, 7, 7, 7, 6, 6, 6, 6, 7, 8, 7, 6, 6, 6, 5, 4, 4, 4, 4, 4, 5, 4, 3, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 5, 5, 6, 7, 6, 6, 6, 6, 6, 6, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7],
               vec![8, 8, 8, 6, 6, 6, 6, 6, 6, 7, 8, 7, 5, 6, 6, 5, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 4, 4, 4, 4, 5, 5, 5, 6, 7, 6, 6, 6, 6, 6, 6, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7],
               vec![7, 8, 8, 7, 6, 6, 6, 7, 7, 7, 7, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 6, 5, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 5, 5, 5, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7],
               vec![6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 5, 5, 5, 4, 3, 4, 4, 4, 4, 5, 6, 6, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 6, 7],
               vec![7, 8, 8, 8, 9, 9, 9, 8, 8, 7, 6, 4, 4, 4, 3, 3, 3, 3, 3, 4, 6, 7, 6, 5, 4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 5, 5, 5, 6, 6, 7, 6, 6, 5, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6],
               vec![7, 6, 6, 7, 8, 8, 8, 7, 7, 6, 4, 4, 3, 4, 4, 4, 4, 4, 4, 5, 6, 6, 5, 4, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 6, 6, 7, 6],
               vec![6, 6, 6, 6, 7, 7, 7, 7, 6, 5, 4, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 4, 3, 2, 2, 3, 4, 3, 3, 4, 4, 4, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 6, 6, 7, 6],
               vec![6, 6, 5, 5, 6, 6, 6, 5, 5, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 4, 3, 3, 2, 2, 3, 3, 2, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 6, 6, 5, 5, 5, 5, 5, 5, 5, 6, 6, 7, 6],
               vec![6, 6, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 5, 4, 3, 2, 2, 3, 3, 2, 1, 2, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 6, 6, 7, 6],
               vec![6, 6, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 3, 4, 5, 6, 5, 3, 2, 2, 2, 3, 3, 2, 1, 2, 2, 3, 3, 4, 4, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 4, 4, 5, 6, 7, 7],
               vec![6, 6, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 3, 4, 5, 5, 4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 5, 5, 4, 4, 4, 5, 5, 6, 7],
               vec![6, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 4, 3, 4, 4, 5, 5, 4, 2, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 5, 6],
               vec![6, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 5, 4, 3, 2, 1, 1, 0, 0, 1, 2, 2, 3, 3, 4, 4, 4, 4, 3, 3, 3, 4, 5, 5, 5, 5, 5, 4, 4, 5, 5, 5, 4, 3, 3, 4, 4, 4, 4, 4, 5, 6],
               vec![8, 7, 6, 6, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 6, 6, 5, 4, 4, 4, 4, 3, 2, 2, 1, 0, 0, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 3, 3, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 5, 5, 6],
               vec![9, 8, 7, 6, 5, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 5, 5, 4, 4, 4, 3, 3, 2, 1, 1, 0, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 7],
               vec![9, 8, 7, 6, 5, 4, 4, 4, 5, 6, 6, 6, 5, 5, 6, 6, 5, 5, 4, 4, 4, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 7, 8],
               vec![8, 8, 7, 6, 5, 4, 4, 4, 5, 5, 6, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 7, 7],
               vec![7, 8, 8, 6, 5, 4, 4, 4, 4, 5, 5, 5, 5, 4, 4, 4, 4, 3, 4, 4, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 7],
               vec![7, 8, 8, 7, 6, 5, 5, 4, 5, 5, 6, 5, 5, 5, 4, 4, 4, 3, 4, 4, 4, 3, 2, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 6, 6, 7],
               vec![8, 9, 8, 7, 6, 6, 5, 5, 6, 6, 7, 6, 6, 5, 5, 4, 4, 3, 3, 4, 4, 3, 2, 1, 1, 1, 1, 1, 2, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 6, 6, 7, 7],
               vec![9, 9, 8, 6, 6, 6, 5, 5, 5, 6, 6, 6, 6, 6, 6, 5, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 2, 2, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 7, 7, 7],
               vec![9, 9, 7, 6, 6, 6, 5, 5, 5, 5, 5, 6, 6, 6, 6, 5, 4, 3, 3, 3, 3, 3, 3, 2, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7],
               vec![9, 7, 6, 6, 6, 6, 6, 5, 4, 4, 4, 5, 5, 6, 6, 5, 4, 4, 4, 3, 4, 4, 3, 3, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7],
               vec![7, 7, 6, 5, 6, 6, 6, 5, 4, 4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, 0, 1, 2, 2, 1, 2, 2, 3, 3, 4, 4, 3, 3, 4, 4, 6, 6, 6, 6, 6, 6, 5, 5, 5, 6, 6, 7],
               vec![6, 6, 6, 6, 6, 6, 6, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 3, 3, 4, 5, 5, 4, 5, 5, 6, 6, 6, 5, 4, 4, 4, 4, 4, 5, 5, 6],
               vec![6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 3, 4, 4, 4, 5, 5, 4, 4, 4, 3, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 3, 4, 5, 5, 6, 6, 7, 7, 6, 5, 3, 4, 4, 4, 4, 5, 5, 5, 6],
               vec![6, 6, 6, 6, 5, 4, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 3, 4, 5, 5, 5, 5, 4, 4, 3, 2, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 6, 4, 3, 3, 3, 3, 4, 5, 5, 5, 7],
               vec![6, 6, 6, 6, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 4, 4, 4, 2, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 5, 5, 5, 4, 3, 4, 4, 4, 5, 5, 6, 7],
               vec![6, 6, 6, 6, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 4, 5, 5, 4, 4, 4, 5, 5, 6, 6, 7],
               vec![7, 6, 6, 6, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 3, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 7],
               vec![6, 6, 6, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 5, 5, 5, 5, 5, 4, 4, 4, 3, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 4, 5, 5, 5, 5, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8],
               vec![5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 5, 5, 5, 5, 4, 4, 4, 3, 3, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 4, 5, 6, 7, 7, 9],
               vec![5, 5, 5, 5, 5, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 3, 2, 2, 3, 4, 4, 5, 5, 5, 4, 4, 4, 4, 3, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 4, 5, 6, 6, 6, 6, 7, 6, 7, 6, 6, 5, 5, 4, 5, 6, 7, 8, 9],
               vec![6, 6, 7, 7, 7, 8, 8, 7, 7, 6, 6, 6, 6, 5, 5, 4, 3, 3, 3, 3, 3, 4, 4, 5, 4, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 6, 5, 5, 5, 6, 7, 7, 8, 9],
               vec![8, 8, 8, 7, 7, 7, 7, 7, 8, 8, 7, 7, 6, 6, 5, 4, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 6, 5, 5, 6, 7, 7, 8, 9, 8],
               vec![9, 8, 7, 6, 6, 6, 6, 7, 7, 8, 7, 7, 7, 6, 5, 5, 5, 5, 5, 4, 4, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 4, 3, 3, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 8, 7, 7, 6, 6, 7, 8, 8, 9, 8, 8],
               vec![9, 8, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 6, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 3, 3, 4, 5, 5, 5, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 8, 8, 7, 7, 7, 8, 8, 9, 9, 8, 8],
               vec![9, 7, 6, 6, 6, 5, 5, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 5, 5, 4, 4, 4, 3, 3, 3, 3, 4, 5, 6, 5, 4, 3, 3, 4, 4, 3, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 8, 7],
               vec![9, 7, 7, 6, 6, 5, 5, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 6, 5, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 5, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 8, 7],
               vec![9, 8, 7, 7, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 5, 5, 5, 5, 6, 6, 5, 4, 4, 4, 4, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8],
               vec![9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 7, 7, 7, 6, 6, 5, 5, 6, 6, 6, 5, 5, 6, 6, 6, 6, 5, 5, 6, 5, 5, 4, 4, 4, 4, 3, 4, 5, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 10, 9, 9, 9, 8],
               vec![9, 8, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 6, 5, 6, 6, 5, 5, 5, 4, 4, 4, 5, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 8],
               vec![9, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 7, 7, 8, 8, 8, 7, 7, 7, 7, 7, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 8, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8],
               vec![8, 8, 8, 7, 7, 7, 7, 8, 8, 8, 8, 7, 7, 7, 7, 6, 6, 6, 7, 8, 8, 8, 8, 7, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 10, 9, 9, 8, 8, 7],
               vec![9, 9, 8, 8, 8, 8, 8, 9, 9, 8, 8, 7, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 7, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 8, 8, 9, 9, 10, 9, 9, 8, 8, 7],
               vec![9, 9, 9, 9, 8, 9, 9, 9, 9, 8, 8, 7, 6, 6, 6, 6, 6, 7, 8, 9, 9, 8, 7, 6, 6, 6, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 10, 9, 9, 8, 8, 8],
               vec![10, 10, 9, 9, 9, 9, 9, 9, 9, 8, 7, 6, 6, 5, 5, 6, 7, 7, 8, 9, 9, 8, 6, 6, 6, 6, 6, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 9, 9, 9, 9, 8, 8, 9, 9, 9, 9, 8, 8, 8],
               vec![11, 10, 10, 10, 9, 9, 9, 9, 9, 8, 7, 6, 6, 5, 5, 5, 6, 6, 6, 8, 8, 7, 6, 6, 6, 6, 6, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 10, 9, 9, 8, 8, 9, 9, 9, 9, 9, 9, 9],
               vec![11, 11, 11, 10, 10, 10, 10, 10, 9, 8, 7, 6, 6, 6, 5, 5, 5, 5, 6, 7, 7, 7, 6, 6, 6, 6, 6, 5, 5, 5, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 9, 10, 10, 9, 8, 8, 9, 10, 10, 9, 10, 10, 9],
               vec![11, 12, 11, 11, 10, 10, 10, 10, 9, 8, 7, 6, 6, 6, 6, 5, 5, 5, 6, 7, 7, 7, 6, 6, 6, 6, 6, 6, 5, 5, 6, 7, 8, 8, 8, 8, 8, 8, 8, 7, 7, 7, 8, 8, 8, 7, 7, 8, 9, 10, 9, 8, 8, 9, 10, 10, 10, 10, 10, 9]
                   ]),
           ports: vec![
               Position { row: 32, column: 47 }, Position { row: 38, column: 18 },
               Position { row: 39, column: 39 }, Position { row: 15, column: 36 },
               Position { row: 39, column: 25 }, Position { row: 33, column: 23 },
               Position { row: 12, column: 51 }, Position { row: 34, column: 12 },
               Position { row: 12, column: 17 }, Position { row: 21, column: 35 },
               Position { row: 10, column: 27 }, Position { row: 19, column: 54 },
               Position { row: 24, column: 28 }, Position { row: 25, column: 45 }
           ],
           depth: 12,
           tide_levels: TideLevels { min: 5, max: 7 }
       },
       current_location: None,
       spawn_location: None,
       visited_port_indices: vec![],
       tide_schedule: vec![7, 7, 6, 6, 5, 5, 5, 6, 6, 7],
       is_over: false
   }
}

fn make_pathfinder(game: &GameTick) -> Pathfinder {
    let mut pathfinder = Pathfinder::new();
    let schedule: Vec<u8> = game.tide_schedule.iter().map(|&e| e as u8).collect();
    pathfinder.grid.init(&game.map, &schedule, game.current_tick.into());
    pathfinder
}

fn make_hyperparams() -> HyperParams {
    HyperParams {
        iterations: 342,
        ants: 461,
        evaporation_rate: 0.6,
        exploitation_probability: 0.077,
        heuristic_power: 3.34,
        base_pheromones: 0.7635,
        local_evaporation_rate: 0.50,
    }
}

fn bench_pathfind_only(c: &mut Criterion) {
    let game = make_game();
    c.bench_function("pathfind_only", |b| b.iter(|| {
        let mut pathfinder = make_pathfinder(&game);
        let graph = Graph::new(&mut pathfinder, &game);
        graph
    }));
}

fn bench_ant_colony_optimization_only(c: &mut Criterion) {
    let game = make_game();
    let mut pathfinder = make_pathfinder(&game);
    let graph = Graph::new(&mut pathfinder, &game);
    c.bench_function("ant_colony_optimization_only", |b| b.iter(|| {
        let hyperparams = make_hyperparams();
        let mut colony = Colony::new(graph.clone(), hyperparams, /*seed=*/42);
        colony.run()
    }));
}

fn bench_full_tick0(c: &mut Criterion) {
    let game = make_game();
    c.bench_function("full_tick0", |b| b.iter(|| {
        let mut pathfinder = make_pathfinder(&game);
        let graph = Graph::new(&mut pathfinder, &game);
        let hyperparams = make_hyperparams();
        let mut colony = Colony::new(graph.clone(), hyperparams, /*seed=*/42);
        colony.run()
    }));
}

criterion_group!{
    name = benches;
    config = Criterion::default().sample_size(10);
    targets = bench_pathfind_only, bench_ant_colony_optimization_only, bench_full_tick0
}
criterion_main!(benches);
